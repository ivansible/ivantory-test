---
name: test

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: '15 2 * * 1'
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - name: ivantory-bionic
            playbook: ivantory
            os: ubuntu-18.04
            scenario: local

          - name: ivantory-focal
            playbook: ivantory
            os: ubuntu-20.04
            scenario: local

          - name: devops-bionic
            playbook: devops
            os: ubuntu-18.04
            scenario: local

          - name: devops-focal
            playbook: devops
            os: ubuntu-20.04
            scenario: local

          - name: bastion-docker
            playbook: bastion
            os: ubuntu-latest
            scenario: all

          - name: master-docker
            playbook: master
            os: ubuntu-latest
            scenario: all

          - name: plugins
            playbook: none
            os: ubuntu-latest
            scenario: plugins

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      TARGET: ${{ matrix.scenario }}
      PLAYBOOK: ${{ matrix.playbook }}
      ANSIBLE_FORCE_COLOR: true

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: fix pip issues on bionic
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: |
          # fix "cannot uninstall pexpect, it is a distutils installed project"
          sudo apt-get remove -qy python3-pexpect

      - name: upgrade pip
        run: |
          # upgrade pip, remove incompatible pyYAML
          sudo apt-get remove -qy python3-yaml
          sudo -H pip3 install -U pip setuptools wheel
          # screw you cryptography! why require rust??
          sudo -H pip3 install "cryptography<3.4"

      - name: install requisites
        run: |
          # remove incompatible ansible preinstalled on github
          sudo rm -f /opt/pipx_bin/ansible*
          # postpone ansible 2.10 and molecule 3.2
          sudo -H pip3 install ansible==2.9.21 mitogen==0.2.9
          sudo -H pip3 install "molecule[docker]<3.2"
          # pull dependencies
          sudo -H pip3 install ansible-lint yamllint flake8 pytest pytest-testinfra
          sudo -H pip3 install boto3 jmespath netaddr docker

      - name: make mitogen strategy symlink
        run: |
          dir=$(python3 -c "import ansible_mitogen as m; print(m.__path__[0])")
          ln -sf $dir/plugins/strategy ./plugins/strategy/mitogen

      - name: make symlink for custom modules
        if: ${{ matrix.scenario == 'plugins' }}
        run: |
          ln -sf ~/.cache/molecule/ivantory-test/$TARGET/roles ./roles-galaxy

      - name: investigate idempotence failures
        run: |
          touch log/idempotence.log
          src=$(pwd)
          pkg=$(python3 -c "import molecule as m; print(m.__path__[0])")
          sudo patch -d ${pkg} -p3 -i ${src}/.github/workflows/idempotence.patch

      - name: run test
        run: |
          # set environment for local host, docker or plugins test
          if [ ${{ matrix.scenario }} == local ]; then
              export IVATEST_FIREWALL=none
              export IVATEST_SSH_SERVER=false
              export IVATEST_SYSTEMD_TMPFILES=false
              if [ ${{ matrix.os }} == ubuntu-20.04 ]; then
                  # mitigate mitogen detecting python as python2 on focal
                  export IVATEST_PYTHON_GROUP=python3
              fi
          else
              export IVATEST_FIREWALL=none
              export IVATEST_SSH_SERVER=true
              export IVATEST_SYSTEMD_TMPFILES=true
          fi
          molecule test -s ${{ matrix.scenario }}

      - name: upload idempotence log
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: idempotence.${{ matrix.name }}.log
          path: log/idempotence.log
...
