#!/usr/bin/env python3
import sys
import re

MAX_DIFF = 2
beg_regex = '^(?:\x1b\\[1m)?'
end_regex = '(?:\x1b\\[m)?\n?$'

lines = list(sys.stdin)
for _ in range(3):
    lines.append('')

for cur_no in range(len(lines)-3):
    if re.match(beg_regex+'index [a-f0-9]+\\.\\.[a-f0-9]+( 1[0-9]+)?'+end_regex, lines[cur_no]):
        lines[cur_no] = ''
        continue

    match_head = re.match(beg_regex+'diff --git a/(.*?) b/(.*?)'+end_regex, lines[cur_no])
    match_del = re.match(beg_regex+'deleted file mode 1[0-9]+'+end_regex, lines[cur_no+1])
    if match_head and match_del and match_head.group(1) == match_head.group(2):
        lines[cur_no] = '>>> delete: %s\n' % match_head.group(1)
        lines[cur_no+1] = ''
        continue

    match_simil = re.match(beg_regex+'similarity index (100|[4-9][0-9])%'+end_regex, lines[cur_no+1])
    match_from = re.match(beg_regex+'rename from (.*?)'+end_regex, lines[cur_no+2])
    match_to = re.match(beg_regex+'rename to (.*?)'+end_regex, lines[cur_no+3])

    if (match_head and match_simil and match_from and match_to
          and match_head.group(1) == match_from.group(1)
          and match_head.group(2) == match_to.group(1)):
        opname = 'rename'
        if match_simil.group(1) != '100':
            opname = 'rename+update(%s%%)' % match_simil.group(1)

        result = '%s: %s => %s\n' % (opname, match_from.group(1), match_to.group(1))
        from_parts = match_from.group(1).split('/')
        to_parts = match_to.group(1).split('/')
        if len(from_parts) == len(to_parts):
            diff_parts = from_parts[:]
            diff_count = 0
            for part_no in range(len(from_parts)):
                if from_parts[part_no] != to_parts[part_no]:
                    diff_count += 1
                    diff_parts[part_no] = '{%s => %s}' % (from_parts[part_no], to_parts[part_no])
            if diff_count <= MAX_DIFF:
                result = '%s: %s\n' % (opname, '/'.join(diff_parts))

        for off in range(4):
            lines[cur_no+off] = ''
        lines[cur_no] = '>>> %s' % result
        continue

    if match_head:
        lines[cur_no] = '>>> diff a/%s b/%s <<<\n' % (match_head.group(1), match_head.group(2))
        continue

sys.stdout.write(''.join(lines))
