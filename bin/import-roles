#!/bin/bash
#set -x

dir=$(readlink -f "$0")
dir=$(dirname "$dir")
divan_dir=$(dirname "$dir")

requirements_file="$divan_dir/requirements.yml"
collections_dir=$(readlink -f "$divan_dir/collections/ansible_collections")
roles_dir=$(readlink -f "$divan_dir/roles")
default_branch=main

kind="item"
name=""
repo=""
branch=""

install_item()
{
  namespace=${name%.*}
  dir=${name#*.}
  if [[ $kind ]] && [[ $namespace ]] && [[ $dir ]] && [[ $repo ]]; then
    case "$kind" in
      collection)
        parent="$collections_dir/$namespace" ;;
      role)
        parent="$roles_dir/$namespace" ;;
    esac
    if [ -d "$parent/$dir" ]; then
      echo "> Skip installed $kind $name"
      return
    fi
    echo "> Installing $kind $namespace/$dir from $repo ($branch) ..."
    mkdir -p "$parent"
    git clone -b "$branch" "$repo" "$parent/$dir" || exit 1
  elif [[ $name ]] || [[ $repo ]]; then
    echo "ERROR: invalid $kind $name"
    exit 1
  fi
}

## simplistic "parser" for requirements.yml
while IFS= read -r line
do
  str=${line//[[:space:]]/}  # strip whitespace
  case "$str" in
    ...|---|\#*)
      continue ;;
  esac

  key=${str%%:*}
  val=${str#*:}
  case "$key" in
    '-name')
      install_item
      name=$val
      branch=$default_branch
      repo=""
      ;;
    source)
      repo=$val ;;
    version)
      branch=$val ;;
    collections)
      kind=collection ;;
    roles)
      kind=role ;;
    type)
      case "$val" in
        git) ;;
        *)
          echo "ERROR: Cannot install $kind $name of type $val"
          exit 1
          ;;
      esac
      ;;
    *)
      echo "ERROR: Unsupported key \"$key\":"
      echo "[$line]"
      exit 1
      ;;
  esac
  # echo "$key = $val"
done < "$requirements_file"

install_item
exit 0
